services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: booking
      POSTGRES_PASSWORD: bookingpass
      POSTGRES_DB: bookingdb
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U booking -d bookingdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - RATELIMIT_STORAGE_URI=redis://redis:6379/0
    ports:
      - "8080:8080"
    command: >
      bash -lc "flask --app app.main db_init && gunicorn -w 3 -b 0.0.0.0:8080 app.main:app --timeout 600"

volumes:
  dbdata:

services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: booking
      POSTGRES_PASSWORD: bookingpass
      POSTGRES_DB: bookingdb
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U booking -d bookingdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    # ⚠️ no ports here; keep 8080 internal
    command: >
      bash -lc "flask --app app.main db_init && gunicorn -w 3 -b 0.0.0.0:8080 app.main:app --timeout 600"

caddy:
    image: caddy:2
    restart: unless-stopped
    depends_on:
      - web
    environment:
      - DOMAIN=booking.example.com        # <-- change to your domain
      - EMAIL=admin@example.com           # <-- email for Let's Encrypt notices
    ports:
      # If you want 443-only, keep just the 443 mapping.
      # - "443:443"
      # If you want 80→443 redirects and easier HTTP-01 challenge, also map 80:
       - "80:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config

volumes:
  dbdata:
  caddy_data:
  caddy_config: